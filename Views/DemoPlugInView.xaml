<mvvm:UserSettingsAwareView x:Class="EAS.LeegooBuilder.Client.GUI.Modules.DemoPluginModule.Views.DemoPlugInView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
             xmlns:devExpressHelper="clr-namespace:EAS.LeegooBuilder.Client.Common.ToolsAndUtilities.DevExpressHelper;assembly=EAS.LeegooBuilder.Client.Common.ToolsAndUtilities"
             xmlns:converter="clr-namespace:EAS.LeegooBuilder.Client.GUI.Modules.MainModule.Converter;assembly=EAS.LeegooBuilder.Client.GUI.Modules.MainModule"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:vbhs="clr-namespace:EAS.LeegooBuilder.Client.Common.ToolsAndUtilities.Views.Behaviors;assembly=EAS.LeegooBuilder.Client.Common.ToolsAndUtilities"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:mvvm="clr-namespace:EAS.LeegooBuilder.Client.ServerProxy.BusinessServiceClientBase.MVVM;assembly=EAS.LeegooBuilder.Client.ServerProxy.BusinessServiceClientBase"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="800">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/EAS.LeegooBuilder.Client.Common.ToolsAndUtilities;component/Themes/CommonColorStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <devExpressHelper:ConfigurationTreeItemChildrenSelector x:Key="ConfigurationTreeItemChildrenSelector" />
            <devExpressHelper:TreeItemImageSelector x:Key="TreeItemImageSelector" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converter:AoSelectToBooleanConverter x:Key="AoSelectToBooleanConverter" />
            <converter:AoSelectInheritedToBooleanConverter x:Key="AoSelectInheritedToBooleanConverter" />

            <!--CellTemplate für die Spalte EditStateIndication (="!"). Hierdurch wird es möglich, die Spalte noch schmaler zu machen und trotzdem das "!"-Zeichen lesen zu können-->
            <DataTemplate x:Key="EditStateIndicationCellTemplate">
                <Label Content="{Binding RowData.Row.Value.EditStateIndication}" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </DataTemplate>

            <!--CellTemplate für die Spalte Anchor. Hierdurch wird es möglich, die Spalte noch schmaler zu machen.-->
            <DataTemplate x:Key="AnchorCellTemplate">
                <Label Foreground="{StaticResource AnchorForeGroundColor}" Background="{StaticResource AnchorBackGroundColor}" Content="{Binding RowData.Row.Anchor}" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </DataTemplate>

            <!--CellTemplate für die Spalte HasAnySpecializedDescription. Ein Icon soll darstgestellt werden, wenn eine spezialisierte Benennung existiert.-->
            <DataTemplate x:Key="SpecializedDescriptionTemplate">
                <Image Margin="0,2,0,0" Source="/EAS.LeegooBuilder.Client.GUI.Modules.DemoPluginModule;component/Images/TreeIcons/SpecializedDescription_16x16.png" Visibility="{Binding RowData.Row.Value.HasAnySpecializedDescription, Converter={StaticResource BooleanToVisibilityConverter}}" Stretch="None" />
            </DataTemplate>

            <!--CellTemplate für die Spalte HasAnySpecializedLongText. Ein Icon soll darstgestellt werden, wenn ein spezialisiertet Langtext existiert.-->
            <DataTemplate x:Key="SpecializedLongTextTemplate">
                <Image Margin="0,2,0,0" Source="/EAS.LeegooBuilder.Client.GUI.Modules.DemoPluginModule;component/Images/TreeIcons/SpecializedLongText_16x16.png" Visibility="{Binding RowData.Row.Value.HasAnySpecializedLongText, Converter={StaticResource BooleanToVisibilityConverter}}" Stretch="None" />
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>


    <StackPanel>
        <Label Content="DemoPlugIn" FontSize="30"/>


        <!--Projektliste-->
        <StackPanel Orientation="Horizontal">
            <ListBox Width="400" Height="200" ItemsSource="{Binding ListOfProjects}"></ListBox>
        </StackPanel>


        <!-- SysCodes-Beispiel -->
        <StackPanel Orientation="Horizontal">
            <Label Content="SysCodes-Test"/>
            <ComboBox Width="140" HorizontalAlignment="Left" ItemsSource="{Binding ProjectAndConfigurationModel.SysCodesDictionary[BELEGART]}" DisplayMemberPath="Text" SelectedValuePath="Code" />
        </StackPanel>


        <!-- Konfigurationsbaum (erfordert DevExpress, wenn nicht vorhanden, bitte auskommentieren -->
        <dxg:TreeListControl Name="ConfigurationTreeList" Height="300" Margin="2" ItemsSource="{Binding ProjectAndConfigurationModel.SelectedProposal.Configuration.Root.RootTreeItem.Children}" AutoPopulateColumns="False">

            <dxg:TreeListControl.Resources>

                <!--Style fuer das Einfaerben der EditState-Spalte um den Bearbeitungsstatus darzustellen-->
                <Style x:Key="CellBackgroundEditState" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}" TargetType="{x:Type dxg:LightweightCellEditor}">
                    <Style.Triggers>

                        <!--Bearbeitungsstatus: in Arbeit-->
                        <DataTrigger Binding="{Binding Path=RowData.Row.Value.EditStateInherited}" Value="Editing">
                            <Setter Property="Background" Value="{StaticResource EditStateEditingInheritedColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=RowData.Row.Value.EditState}" Value="Editing">
                            <Setter Property="Background" Value="{StaticResource EditStateEditingColor}" />
                        </DataTrigger>


                        <!--Bearbeitungsstatus: technisch Ok-->
                        <DataTrigger Binding="{Binding Path=RowData.Row.Value.EditStateInherited}" Value="TechnicalOk">
                            <Setter Property="Background" Value="{StaticResource EditStateTechnicalOkInheritedColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=RowData.Row.Value.EditState}" Value="TechnicalOk">
                            <Setter Property="Background" Value="{StaticResource EditStateTechnicalOkColor}" />
                        </DataTrigger>


                        <!--Bearbeitungsstatus: Freigegeben-->
                        <DataTrigger Binding="{Binding Path=RowData.Row.Value.EditStateInherited}" Value="Released">
                            <Setter Property="Background" Value="{StaticResource EditStateReleasedInheritedColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=RowData.Row.Value.EditState}" Value="Released">
                            <Setter Property="Background" Value="{StaticResource EditStateReleasedColor}" />
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="TextBlock.FontWeight" Value="Bold" />
                </Style>

                <!--Style fuer die Hintergrundfarbe bei gesetzten AO-Select-->
                <Style x:Key="RowBackgroundAoSelect" TargetType="{x:Type dxg:RowControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Row.Value.Aoselect, Converter={StaticResource AoSelectInheritedToBooleanConverter}}" Value="True">
                            <Setter Property="Background" Value="{StaticResource AOSelectInheritedBackGroundColor}" />
                            <Setter Property="Foreground" Value="Black" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Row.Value.Aoselect, Converter={StaticResource AoSelectToBooleanConverter}}" Value="True">
                            <Setter Property="Background" Value="{StaticResource AOSelectBackGroundColor}" />
                            <Setter Property="Foreground" Value="Black" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </dxg:TreeListControl.Resources>

            <dxg:TreeListControl.Columns>
                <dxg:TreeListColumn FieldName="Value.SubstitutedDescription" Header="{Binding Translator[Description]}" Fixed="Left" />
                <dxg:TreeListColumn FieldName="Anchor" Header="{Binding Translator[Anchor]}" Width="7" Fixed="Left" CellTemplate="{StaticResource AnchorCellTemplate}" />
                <dxg:TreeListColumn FieldName="Value.EditStateIndication" Visible="{Binding VisibilityOfEditStateIndicationColumnInConfigurationTree}" Header="{Binding Translator[EditState]}" Width="5" Fixed="Left" CellStyle="{StaticResource CellBackgroundEditState}" CellTemplate="{StaticResource EditStateIndicationCellTemplate}" />
                <dxg:TreeListColumn FieldName="Value.HasAnySpecializedDescription" Visible="{Binding VisibilityOfHasSpecializedDescriptionIndicationColumnInConfigurationTree}" Header="{Binding Translator[SpecializedDescription]}" Width="18" Fixed="Left" CellTemplate="{StaticResource SpecializedDescriptionTemplate}" />
                <dxg:TreeListColumn FieldName="Value.HasAnySpecializedLongText" Visible="{Binding VisibilityOfHasSpecializedLongTextIndicationColumnInConfigurationTree}" Header="{Binding Translator[SpecializedLongText]}" Width="16" Fixed="Left" CellTemplate="{StaticResource SpecializedLongTextTemplate}" />
                <dxg:TreeListColumn FieldName="Value.Aoselect" Header="{Binding Translator[AOSelect]}" />
                <dxg:TreeListColumn FieldName="Value.Posno" Header="{Binding Translator[Posno]}" />
                <dxg:TreeListColumn FieldName="Value.Quantity" Header="{Binding Translator[Quantity]}" Width="90">
                    <dxg:TreeListColumn.EditSettings>
                        <dxe:TextEditSettings HorizontalContentAlignment="Right" />
                    </dxg:TreeListColumn.EditSettings>
                </dxg:TreeListColumn>
                <dxg:TreeListColumn FieldName="Value.QuantityTotal" Header="{Binding Translator[QuantityTotal]}" Width="90">
                    <dxg:TreeListColumn.EditSettings>
                        <dxe:TextEditSettings HorizontalContentAlignment="Right" />
                    </dxg:TreeListColumn.EditSettings>
                </dxg:TreeListColumn>
                <dxg:TreeListColumn FieldName="Value.ElementID" Header="{Binding Translator[ElementID]}" />
                <dxg:TreeListColumn FieldName="Value.CatalogueID" Header="{Binding Translator[CatalogueID]}" />
            </dxg:TreeListControl.Columns>

            <dxg:TreeListControl.View>
                <dxg:TreeListView TreeDerivationMode="ChildNodesSelector" ShowNodeImages="True" NodeImageSelector="{StaticResource TreeItemImageSelector}"
                              ChildNodesSelector="{StaticResource ConfigurationTreeItemChildrenSelector}" FocusedRow="{Binding SelectedConfigurationTreeItem, Mode=TwoWay}" AutoExpandAllNodes="True" 
                              AllowEditing="False" ShowSearchPanelMode="Never" RowStyle="{StaticResource RowBackgroundAoSelect}">

                    <dxmvvm:Interaction.Behaviors>

                        <!--Anchoring Behavior-->
                        <vbhs:TreeStructureAnchorBehavior TreeStructure="{Binding ProjectAndConfigurationModel.SelectedProposal.Configuration}"/>

                        <!--Expand/Collapse Behavior-->
                        <vbhs:TreeListExpandedBehavior/>

                    </dxmvvm:Interaction.Behaviors>

                </dxg:TreeListView>
            </dxg:TreeListControl.View>
        </dxg:TreeListControl>


        <!--aktuell im Konfigurationsbaum angewählte Komponente-->
        <StackPanel Orientation="Horizontal">
            <Label Content="Selected Component:  "></Label>
            <Label Content="{Binding SelectedConfigurationTreeItem.Value.Description}"/>
        </StackPanel>

    </StackPanel>
</mvvm:UserSettingsAwareView>

